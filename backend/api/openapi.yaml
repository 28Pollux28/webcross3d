openapi: 3.0.3
info:
  title: Webcross 3D API
  version: 0.1.0

paths:
  /api/healthz:
    get:
      summary: Health check
      responses:
        '200':
          description: OK

  /api/puzzles:
    get:
      summary: List all public puzzles
      responses:
        '200':
          description: A list of puzzles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/PuzzleSummary'

  /api/puzzles/{id}:
    get:
      summary: Get puzzle metadata and clues
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Puzzle with clue data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Puzzle'

  /api/puzzles/{id}/start:
    post:
      summary: Start a new puzzle session
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Session started
          content:
            application/json:
              schema:
                type: object
                properties:
                  lives:
                    type: integer

  /api/puzzles/{id}/actions:
    post:
      summary: Validate a voxel destruction action
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VoxelAction'
      responses:
        '200':
          description: Action result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActionResult'

components:
  schemas:
    PuzzleSummary:
      type: object
      required: [id, name, author]
      properties:
        id:
          type: string
        name:
          type: string
        author:
          type: string

    Puzzle:
      type: object
      required: [id, name, author, sizeX, sizeY, sizeZ, clues]
      properties:
        id:
          type: string
        name:
          type: string
        author:
          type: string
        sizeX:
          type: integer
        sizeY:
          type: integer
        sizeZ:
          type: integer
        clues:
          type: array
          items:
            $ref: '#/components/schemas/ClueSet'

    ClueSet:
      type: object
      required: [axis, coord1, coord2, count, split]
      properties:
        axis:
          type: string
          enum: [X, Y, Z]
        coord1:
          type: integer
        coord2:
          type: integer
        count:
          type: integer
          nullable: true
        split:
          $ref: '#/components/schemas/ClueSplit'

    ClueSplit:
      type: string
      enum: [NoSplit, Split2, Split3Plus]

    VoxelAction:
      type: object
      required: [x, y, z]
      properties:
        x:
          type: integer
        y:
          type: integer
        z:
          type: integer

    ActionResult:
      type: object
      required: [success, remainingLives, completed]
      properties:
        success:
          type: boolean
        remainingLives:
          type: integer
        completed:
          type: boolean
        completionTime:
          type: integer

    CompletionResult:
      type: object
      required: [correct, completionTime]
      properties:
        correct:
          type: boolean
        completionTime:
          type: integer
